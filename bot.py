
from bot_base import *

####

kb_main_menu = ikb([
    ('‚ùì –ú–æ—ó –∑–∞–ø–∏—Ç–∞–Ω–Ω—è', 'myquestions')
])


@client.on_message(filters.command('start'))
@cmd_error_handling
async def cmd_start(_, msg: types.Message):
    is_new = False
    with Session(engine) as session:
        
        u = session.query(database.User).where(database.User.user_id == msg.from_user.id).one_or_none()
        if u is None:
            u = database.User(
                user_id=msg.from_user.id,
                user_link=random_string(config['user_link_min_length'] + max(1, int(session.query(database.User).count() / config['user_link_length_threshold']))),
            )
            session.add(u)
            session.commit()
            is_new = False
            logger.info('{} (@{}, {}) is new user!', msg.from_user.first_name, msg.from_user.username, msg.from_user.id)

        bot_un = (await client.get_me()).username
        
        if len(msg.command) > 1:
            link = msg.command[1]
            
            to_user = session.query(database.User).where(database.User.user_link == link).one_or_none()
            if to_user is None:
                await msg.reply(f'''
‚ùå –ù–∞ –∂–∞–ª—å —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–∫–æ—Ä—ñ—à –∑–∞ –≤—Å—å–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ.

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
                return
        
            m = await client.ask(chat_id=msg.from_user.id, text='‚úçÔ∏è –ù–∞–ø–∏—à–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ –ø—Ä–∏—à–ª–∏ –∞—É–¥—ñ–æ, –≤—ñ–¥–µ–æ, —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ —Ñ–∞–π–ª.', filters=filters.text | filters.audio | filters.video | filters.photo | filters.voice | filters.document, timeout=3600)
            
            if m is None:
                await msg.reply(f'''
‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ!

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
                return
            
            if m.text is not None:
                if m.text.startswith('/'):
                    await msg.reply(f'''
‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ!

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
                    return
            
            try:
                if m.photo is not None:
                    await client.send_photo(to_user.user_id, m.photo.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–∞ –∞–Ω–æ–Ω–∏–º–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞!'.strip() + f'\n\nüí¨ `{m.caption}`' if m.caption is not None else '', reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
                elif m.audio is not None:
                    await client.send_audio(to_user.user_id, m.audio.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –∞—É–¥—ñ–æ!'.strip() + f'\n\nüí¨ `{m.audio.caption}`' if m.audio.caption is not None else '', duration=m.audio.duration, performer=m.audio.performer, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
                elif m.video is not None:
                    await client.send_video(to_user.user_id, m.video.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –≤—ñ–¥–µ–æ!'.strip() + f'\n\nüí¨ `{m.video.caption}`' if m.video.caption is not None else '', duration=m.video.duration, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
                elif m.voice is not None:
                    await client.send_voice(to_user.user_id, m.voice.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', duration=m.voice.duration, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
                elif m.document is not None:
                    await client.send_document(to_user.user_id, m.document.file_id, caption=f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–∏–π —Ñ–∞–π–ª!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', file_name=m.document.file_name, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
                else:
                    await client.send_message(to_user.user_id, f'''
üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!

üí¨ `{m.text}`
'''.strip(), reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            except Exception as e:
                logger.exception('handled exception in /{}: {}', 'start', e)
                await msg.reply(f'''
‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ–º–æ–∂–ª–∏–≤–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏!
–ú–∞–±—É—Ç—å –æ—Ç—Ä–∏–º—É–≤–∞—á –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞.

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
                return

            await m.delete()
            await m.sent_message.delete()        
        
            if m.photo is not None:
                await client.send_photo(msg.from_user.id, m.photo.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É!'.strip() + f'\n\nüí¨ `{m.caption}`' if m.caption is not None else '', reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            elif m.audio is not None:
                await client.send_audio(msg.from_user.id, m.audio.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –∞—É–¥—ñ–æ!'.strip() + f'\n\nüí¨ `{m.audio.caption}`' if m.audio.caption is not None else '', duration=m.audio.duration, performer=m.audio.performer, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            elif m.video is not None:
                await client.send_video(msg.from_user.id, m.video.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –≤—ñ–¥–µ–æ!'.strip() + f'\n\nüí¨ `{m.video.caption}`' if m.video.caption is not None else '', duration=m.video.duration, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            elif m.voice is not None:
                await client.send_voice(msg.from_user.id, m.voice.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', duration=m.voice.duration, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            elif m.document is not None:
                await client.send_document(msg.from_user.id, m.document.file_id, caption=f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–∏–π —Ñ–∞–π–ª!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', file_name=m.document.file_name, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            else:
                await client.send_message(msg.from_user.id, f'''
üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!

üí¨ `{m.text}`
'''.strip(), reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            if not is_new:
                return

        await msg.reply(f'''
‚úã –ü—Ä–∏–≤—ñ—Ç! –Ø –ª–∏—Å—Ç–æ–Ω–æ—à–∞ –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å —á–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å!

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: t.me/{bot_un}?start={u.user_link}

üëÅ‚Äçüó® –î–æ–¥–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É —Ç–≤—ñ–π –¢–ì–ö —á–∏ —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç—É —Ç–∞ –æ—Ç—Ä–∏–º—É–π –∞–Ω–æ–Ω–∏–º–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!
'''.strip()
        )

####


@client.on_callback_query(cbfilter_param('write:'))
@q_error_handling
async def q_write(_, q: types.CallbackQuery):
    with Session(engine) as session:
        
        u = session.query(database.User).where(database.User.user_id == q.from_user.id).one_or_none()
        if u is None:
            u = database.User(
                user_id=q.from_user.id,
                user_link=random_string(config['user_link_min_length'] + max(1, int(session.query(database.User).count() / config['user_link_length_threshold']))),
            )
            session.add(u)
            session.commit()

        bot_un = (await client.get_me()).username
        link = q.data[6:]
        
        to_user = session.query(database.User).where(database.User.user_link == link).one_or_none()
        if to_user is None:
            await q.message.reply(f'''
‚ùå –ù–∞ –∂–∞–ª—å —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–∫–æ—Ä—ñ—à –∑–∞ –≤—Å—å–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ.

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
            return
        
        m = await client.ask(chat_id=q.from_user.id, text='‚úçÔ∏è –ù–∞–ø–∏—à–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ –ø—Ä–∏—à–ª–∏ –∞—É–¥—ñ–æ, –≤—ñ–¥–µ–æ, —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ —Ñ–∞–π–ª.', filters=filters.text | filters.audio | filters.video | filters.voice | filters.photo | filters.document, timeout=3600)
        if m is None:
            await q.message.reply(f'''
‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ!

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
            return
                
        try:
            if m.photo is not None:
                await client.send_photo(to_user.user_id, m.photo.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–∞ –∞–Ω–æ–Ω–∏–º–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞!'.strip() + f'\n\nüí¨ `{m.caption}`' if m.caption is not None else '', reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            elif m.audio is not None:
                await client.send_audio(to_user.user_id, m.audio.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –∞—É–¥—ñ–æ!'.strip() + f'\n\nüí¨ `{m.audio.caption}`' if m.audio.caption is not None else '', duration=m.audio.duration, performer=m.audio.performer, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            elif m.video is not None:
                await client.send_video(to_user.user_id, m.video.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –≤—ñ–¥–µ–æ!'.strip() + f'\n\nüí¨ `{m.video.caption}`' if m.video.caption is not None else '', duration=m.video.duration, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            elif m.voice is not None:
                await client.send_voice(to_user.user_id, m.voice.file_id, f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', duration=m.voice.duration, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            elif m.document is not None:
                await client.send_document(to_user.user_id, m.document.file_id, caption=f'üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–æ–≤ –∞–Ω–æ–Ω–∏–º–Ω–∏–π —Ñ–∞–π–ª!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', file_name=m.document.file_name, reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
            else:
                await client.send_message(to_user.user_id, f'''
üëÅ‚Äçüó®üì• –¢–æ–±—ñ –ø—Ä–∏–π—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!

üí¨ `{m.text}`
'''.strip(), reply_markup=ikb([
    [('–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏', f'write:{u.user_link}')]
]))
        except Exception as e:
            logger.exception('handled exception in /{}: {}', 'start', e)
            await q.message.reply(f'''
‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ–º–æ–∂–ª–∏–≤–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏!
–ú–∞–±—É—Ç—å –æ—Ç—Ä–∏–º—É–≤–∞—á –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞.

üîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å: t.me/{bot_un}?start={u.user_link}
'''.strip())
            return

        await m.delete()
        await m.sent_message.delete()        
        
        
        if m.photo is not None:
            await client.send_photo(q.from_user.id, m.photo.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫–∞!'.strip() + f'\n\nüí¨ `{m.caption}`' if m.caption is not None else '', reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
        elif m.audio is not None:
            await client.send_audio(q.from_user.id, m.audio.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –∞—É–¥—ñ–æ!'.strip() + f'\n\nüí¨ `{m.audio.caption}`' if m.audio.caption is not None else '', duration=m.audio.duration, performer=m.audio.performer, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
        elif m.video is not None:
            await client.send_video(q.from_user.id, m.video.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –≤—ñ–¥–µ–æ!'.strip() + f'\n\nüí¨ `{m.video.caption}`' if m.video.caption is not None else '', duration=m.video.duration, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
        elif m.voice is not None:
            await client.send_voice(q.from_user.id, m.voice.file_id, f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–Ω–æ–Ω–∏–º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', duration=m.voice.duration, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
        elif m.document is not None:
            await client.send_document(q.from_user.id, m.document.file_id, caption=f'üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –ø–∞–Ω–æ–Ω–∏–º–Ω–∏–π —Ñ–∞–π–ª!'.strip() + f'\n\nüí¨ `{m.text}`' if m.text is not None else '', file_name=m.document.file_name, reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
        else:
            await client.send_message(q.from_user.id, f'''
üëÅ‚Äçüó®üì§ –¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!

üí¨ `{m.text}`
'''.strip(), reply_markup=ikb([
    [('–ù–∞–ø–∏—Å–∞—Ç–∏ —â–µ', f'write:{to_user.user_link}')]
]))
            return

####

if __name__ == '__main__':
    client.run()
